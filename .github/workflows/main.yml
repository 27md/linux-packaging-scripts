name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Install Deps
      run: |
        echo 'deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu/ bionic main universe multiverse restricted'>sources.list
        echo 'deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu/ bionic-updates main universe multiverse restricted'>>sources.list
        echo 'deb [arch=arm64,armhf] http://ports.ubuntu.com/ubuntu-ports/ bionic main universe multiverse restricted'>>sources.list
        echo 'deb [arch=arm64,armhf] http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main universe multiverse restricted'>>sources.list
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker run -e GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER} -v $PWD/sources.list:/etc/apt/sources.list -v $PWD:$PWD -w $PWD --rm arm32v7/ubuntu:bionic bash -c "dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y python3-pip cmake g++-arm-linux-gnueabihf patchelf libegl1-mesa:i386 zlib1g:i386 libstdc++6:i386 libgl1-mesa-dri:i386 libasound2:i386 pulseaudio:i386 libpng-dev:armhf libx11-dev:armhf libxi-dev:armhf libcurl4-openssl-dev:armhf libudev-dev:armhf libevdev-dev:armhf libegl1-mesa-dev:armhf libasound2:armhf qt5-default:armhf git cmake pkg-config qtbase5-dev:armhf qtwebengine5-dev:armhf libssl-dev:armhf libcurl4-openssl-dev:armhf libpng-dev:armhf libx11-dev:armhf libxi-dev:armhf libssl-dev:armhf libudev-dev:armhf libevdev-dev:armhf libegl1-mesa-dev:armhf libgl1-mesa-dev:armhf libssl-dev:armhf libuv1-dev:armhf libzip-dev:armhf libprotobuf-dev:armhf protobuf-compiler qtdeclarative5-dev:armhf libqt5svg5-dev:armhf qml-module-qtquick2:armhf qml-module-qtquick-layouts:armhf qml-module-qtquick-controls:armhf qml-module-qtquick-controls2:armhf qml-module-qtquick-window2:armhf qml-module-qtquick-dialogs:armhf qml-module-qt-labs-settings:armhf qml-module-qt-labs-folderlistmodel:armhf jq curl binutils desktop-file-utils squashfs-tools && pip3 install jinja2 ds_store ply && ./build_appimage_armhf2.sh -j4 -q quirks-ubuntu-buster.sh -u https://github.com/ChristopherHX/linux-packaging-scripts/releases/download/appimage/version.armhf2 -i ${GITHUB_RUN_NUMBER}"
    - name: Generate update info
      run: |
        cd output
        file=(*.AppImage)
        echo build_id=${GITHUB_RUN_NUMBER}$'\n'download_url=https://github.com/ChristopherHX/linux-packaging-scripts/releases/download/appimage/${file} > version.armhf2
    - uses: actions/upload-artifact@v1
      with:
        name: armhfappimage
        path: output/
