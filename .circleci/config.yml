version: 2
jobs:
  build:
    docker:
      - image: buildpack-deps:bionic
    steps:
      - checkout
      - run:
          name: Install deps
          command: dpkg --add-architecture i386 && apt-get update && apt-get install -y git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 g++-multilib libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: ./build.sh -j4 -o ubuntu-bionic
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete Bionic_${CIRCLE_BUILD_NUM} output/
  build-disco:
    docker:
      - image: buildpack-deps:disco
    steps:
      - checkout
      - run:
          name: Install deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz --output llvm.tar.xz && tar -xf llvm.tar.xz && dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 libstdc++-7-dev:i386 libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -o ubuntu-disco
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete Disco_${CIRCLE_BUILD_NUM} output/
  build-xenial:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && ./build.sh -j4 -q quirks-ubuntu-1604.sh -o ubuntu-xenial
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete Xenial_${CIRCLE_BUILD_NUM} output/
  build-appimage:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && ./build_appimage.sh -j4 -q quirks-ubuntu-1604.sh -i $CIRCLE_BUILD_NUM
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload the .AppImage to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete AppImage_${CIRCLE_BUILD_NUM} output/Minecraft_Bedrock_Launcher-*-x86_64.AppImage
workflows:
  version: 2
  build:
    jobs:
      - build
      - build-disco
      - build-xenial
      - build-appimage
