version: 2
jobs:
  build-appimage:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Download deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz --output llvm.tar.xz && tar --no-same-owner -xf llvm.tar.xz && curl -L https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.tar.gz --output cmake.tar.gz && tar --no-same-owner -xf cmake.tar.gz && apt update && DEBIAN_FRONTEND=noninteractive apt -y install wget g++-multilib texinfo apt-transport-https && bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" && DEBIAN_FRONTEND=noninteractive apt -y install libc++-10-dev:i386 libc++abi-10-dev:i386 libegl1-mesa-dev:i386 zsync
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04/bin:$PWD/cmake-3.16.2-Linux-x86_64/bin:$PATH LD_LIBRARY_PATH=${LD_LIBRARY_PATH+"${LD_LIBRARY_PATH}:"}$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04/lib CC=clang CXX=clang++ ./build_appimage.sh -j4 -q quirks-ubuntu-1604.sh -u https://github.com/ChristopherHX/linux-packaging-scripts/releases/download/ng.appimage/version.amd64 -i $CIRCLE_BUILD_NUM
      - run:
          name: create update info
          command: |
            cd output
            file=(*.AppImage)
            echo build_id=${CIRCLE_BUILD_NUM}$'\n'download_url=https://github.com/ChristopherHX/linux-packaging-scripts/releases/download/ng.appimage/${file} > version.amd64
      - store_artifacts:
          path: output
          destination: /
      - persist_to_workspace:
          root: output
          paths:
            - ./*.AppImage
            - ./version.*
  deploy-appimage:
    docker:
      - image: debian:buster
    steps:
      - run:
          name: Install ca-certifactes curl zip coreutils findutils
          command: apt update && DEBIAN_FRONTEND=noninteractive apt install -y ca-certificates curl zip coreutils findutils
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Zip files to preserve executable bit
          command: |
            mkdir output
            cp -r /tmp/workspace/* output/
            cd output && (find . -name "*.AppImage" | xargs -n 1 basename | xargs -i{} -n 1 zip {}.zip {})
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "# THIS IS A TEST RELEASE OF THE NG BRANCH CURRENTLY NO SUPPORT FOR THIS APPIMAGE" -delete ng.appimage output/
workflows:
  version: 2
  build:
    jobs:

      - build-appimage
      - deploy-appimage:
          requires:
          - build-appimage
