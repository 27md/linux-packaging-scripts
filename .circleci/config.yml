version: 2
jobs:
  build-arch:
    docker:
      - image: archlinux:latest
    steps:
      - checkout
      - run:
          name: Install deps
          command: "echo '[multilib]' >> /etc/pacman.conf && echo 'Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf && pacman -Syu --noconfirm git util-linux sudo fakeroot binutils autoconf automake libtool pkgconf file make && useradd -m arch && echo 'arch ALL=(ALL) NOPASSWD: ALL' | (EDITOR='tee -a' visudo)"
      - run:
          name: Generate-lib32-evdev
          command: runuser -l arch -c "git clone https://github.com/ChristopherHX/lib32-check.git lib32-check && cd lib32-check && makepkg --syncdeps --noconfirm --install" && runuser -l arch -c "git clone https://aur.archlinux.org/lib32-libevdev.git lib32-libevdev && cd lib32-libevdev && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Build fork
          command: runuser -l arch -c "git clone https://github.com/ChristopherHX/mcpelauncher-linux-git.git mcpelauncher-linux-git && cd mcpelauncher-linux-git && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Build msa
          command: runuser -l arch -c "git clone https://aur.archlinux.org/mcpelauncher-msa-git.git mcpelauncher-msa-git && cd mcpelauncher-msa-git && makepkg --syncdeps --noconfirm --install" && runuser -l arch -c "git clone https://aur.archlinux.org/mcpelauncher-msa-ui-qt-git.git mcpelauncher-msa-ui-qt-git && cd mcpelauncher-msa-ui-qt-git && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Build Qt launcher
          command: runuser -l arch -c "git clone https://github.com/ChristopherHX/mcpelauncher-ui-git.git mcpelauncher-ui-git && cd mcpelauncher-ui-git && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Copy artifacts
          command: runuser -l arch -c "mkdir -p output/ && cp ./*/*.pkg.tar.xz output/" && cp /var/cache/pacman/pkg/protobuf*.pkg.tar.xz /home/arch/output/
      - store_artifacts:
          path: /home/arch/output/
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"Install it via \`sudo pacman -U *.pkg.tar.xz\` or follow the build from source instruction on my README"$'\n'"Now provides protobuf package" -replace amd64.archlinux /home/arch/output/
  build-manjaro:
    docker:
      - image: jonathonf/manjaro:latest
    steps:
      - checkout
      - run:
          name: Install deps
          command: "pacman -Syu --noconfirm && pacman -Syu --noconfirm git util-linux sudo fakeroot binutils autoconf automake libtool pkgconf file make && useradd -m arch && echo 'arch ALL=(ALL) NOPASSWD: ALL' | (EDITOR='tee -a' visudo)"
      - run:
          name: Generate-lib32-evdev
          command: runuser -l arch -c "git clone https://github.com/ChristopherHX/lib32-check.git lib32-check && cd lib32-check && makepkg --syncdeps --noconfirm --install" && runuser -l arch -c "git clone https://aur.archlinux.org/lib32-libevdev.git lib32-libevdev && cd lib32-libevdev && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Build fork
          command: runuser -l arch -c "git clone https://github.com/ChristopherHX/mcpelauncher-linux-git.git mcpelauncher-linux-git && cd mcpelauncher-linux-git && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Build msa
          command: runuser -l arch -c "git clone https://aur.archlinux.org/mcpelauncher-msa-git.git mcpelauncher-msa-git && cd mcpelauncher-msa-git && makepkg --syncdeps --noconfirm --install" && runuser -l arch -c "git clone https://aur.archlinux.org/mcpelauncher-msa-ui-qt-git.git mcpelauncher-msa-ui-qt-git && cd mcpelauncher-msa-ui-qt-git && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Build Qt launcher
          command: runuser -l arch -c "git clone https://github.com/ChristopherHX/mcpelauncher-ui-git.git mcpelauncher-ui-git && cd mcpelauncher-ui-git && makepkg --syncdeps --noconfirm --install"
      - run:
          name: Copy artifacts
          command: runuser -l arch -c "mkdir -p output/ && cp ./*/*.pkg.tar.xz output/" && cp /var/cache/pacman/pkg/protobuf*.pkg.tar.xz /home/arch/output/
      - store_artifacts:
          path: /home/arch/output/
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"Install it via \`sudo pacman -U *.pkg.tar.xz\` or follow the build from source instruction on my README"$'\n'"Now provides protobuf" -delete amd64.manjarolinux /home/arch/output/
  build-19.10:
    docker:
      - image: buildpack-deps:19.10
    steps:
      - checkout
      - run:
          name: Install deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz --output llvm.tar.xz && tar -xf llvm.tar.xz && dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y libtinfo5 git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 libstdc++-8-dev:i386 libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -o ubuntu-disco
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Test install
          command: dpkg -i output/mcpelauncher-client-*.deb output/mcpelauncher-ui-qt-*.deb output/msa-daemon-*.deb output/msa-ui-qt-*.deb
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.ubuntu.eoan.19.10 output/
  build-20.04:
    docker:
      - image: buildpack-deps:20.04
    steps:
      - checkout
      - run:
          name: Install deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz --output llvm.tar.xz && tar -xf llvm.tar.xz && dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y libtinfo5 git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 libstdc++-8-dev:i386 libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -o ubuntu-disco
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Test install
          command: dpkg -i output/mcpelauncher-client-*.deb output/mcpelauncher-ui-qt-*.deb output/msa-daemon-*.deb output/msa-ui-qt-*.deb
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.ubuntu.20.04 output/
  build:
    docker:
      - image: buildpack-deps:bionic
    steps:
      - checkout
      - run:
          name: Install deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz --output llvm.tar.xz && tar -xf llvm.tar.xz && dpkg --add-architecture i386 && apt-get update && apt-get install -y git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 libstdc++-7-dev:i386 libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -o ubuntu-bionic
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.ubuntu.bionic.18.04 output/
  build32:
    docker:
      - image: buildpack-deps:bionic
    steps:
      - checkout
      - run:
          name: Install deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz --output llvm.tar.xz && tar -xf llvm.tar.xz && dpkg --add-architecture i386 && apt-get update && apt-get install -y git cmake pkg-config qtbase5-dev:i386 qtwebengine5-dev:i386 libssl-dev:i386 libcurl4-openssl-dev:i386 libcurl4-openssl-dev:i386 libstdc++-7-dev:i386 libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev:i386 libssl-dev:i386 libuv1-dev:i386 libzip-dev:i386 libprotobuf-dev:i386 protobuf-compiler qtdeclarative5-dev:i386 libqt5svg5-dev:i386 qml-module-qtquick2:i386 qml-module-qtquick-layouts:i386 qml-module-qtquick-controls:i386 qml-module-qtquick-controls2:i386 qml-module-qtquick-window2:i386 qml-module-qtquick-dialogs:i386 qml-module-qt-labs-settings:i386 qml-module-qt-labs-folderlistmodel:i386
      - run:
          name: Run the buildscript
          command: PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -q quirks-32.sh -o ubuntu-bionic
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.ubuntu.bionic32.18.04 output/
  build-disco:
    docker:
      - image: buildpack-deps:disco
    steps:
      - checkout
      - run:
          name: Install deps
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz --output llvm.tar.xz && tar -xf llvm.tar.xz && dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y libtinfo5 git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 libstdc++-8-dev:i386 libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -o ubuntu-disco
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.ubuntu.disco.19.04 output/
  build-buster:
    docker:
      - image: buildpack-deps:buster
    steps:
      - checkout
      - run:
          name: Install deps
          command: dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y 	libtinfo5 git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 g++-multilib libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: ./build.sh -j4 -q quirks-buster.sh
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Test install
          command: dpkg -i output/mcpelauncher-client-*.deb output/mcpelauncher-ui-qt-*.deb output/msa-daemon-*.deb output/msa-ui-qt-*.deb
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.debian.buster.10 output/
  build-stretch:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run:
          name: Install deps
          command: dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y libtinfo5 git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev:i386 g++-multilib libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: ./build.sh -j4 -o ubuntu-bionic
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Test install
          command: dpkg -i output/mcpelauncher-client-*.deb output/mcpelauncher-ui-qt-*.deb output/msa-daemon-*.deb output/msa-ui-qt-*.deb
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.debian.stretch.9 output/
  build-buster-origin:
    docker:
      - image: buildpack-deps:buster
    steps:
      - checkout
      - run:
          name: Install deps
          command: dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y 	libtinfo5 git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 g++-multilib libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: ./buildorigin.sh -j4 -o debian-buster
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.mrarm.debian.buster.10 output/
  build-buster-appimage-origin:
    docker:
      - image: buildpack-deps:buster
    steps:
      - checkout
      - run:
          name: Download clang 9.0.0 and install libstdc++
          command: dpkg --add-architecture i386 && apt update && DEBIAN_FRONTEND=noninteractive apt install -y 	qt5-default git cmake pkg-config qtbase5-dev qtwebengine5-dev libssl-dev:i386 libcurl4-openssl-dev libcurl4-openssl-dev:i386 g++-multilib libpng-dev:i386 libx11-dev:i386 libxi-dev:i386 libssl-dev libudev-dev:i386 libevdev-dev:i386 libegl1-mesa-dev:i386 libgl1-mesa-dev libssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
      - run:
          name: Run the buildscript
          command: ./build_appimageorigin.sh -j4 -q quirks-ubuntu-1604.sh -i $CIRCLE_BUILD_NUM
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"Install \`chmod +x path/to/Minecraft.Appimage\` or in Files properties run as executable" -delete amd64.mrarm.debian.buster.10.appimage output/
  build-xenial:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Download clang 9.0.0 and install libstdc++
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz --output llvm.tar.xz && tar --no-same-owner -xf llvm.tar.xz && apt update && DEBIAN_FRONTEND=noninteractive apt install -y libstdc++-5-dev:i386
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -q quirks-ubuntu-1604.sh -o ubuntu-xenial
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete amd64.ubuntu.xenial.16.04 output/
  build-xenial32:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Download clang 9.0.0 and install libstdc++
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz --output llvm.tar.xz && tar --no-same-owner -xf llvm.tar.xz && apt update && DEBIAN_FRONTEND=noninteractive apt -y remove qt59base qt59declarative qt59quickcontrols qt59quickcontrols2 qt59svg qt59webengine libcurl4-openssl-dev libzip-dev libuv1-dev && DEBIAN_FRONTEND=noninteractive apt -y install libstdc++-5-dev:i386 libcurl4-openssl-dev:i386 libssl-dev:i386 libgl1-mesa-dev:i386 libuv1-dev:i386 libzip-dev:i386 libprotobuf-dev:i386 qt59base:i386 qt59declarative:i386 qt59quickcontrols:i386 qt59quickcontrols2:i386 qt59svg:i386 qt59webengine:i386
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04/bin:$PATH CC=clang CXX=clang++ ./build.sh -j4 -q quirks-ubuntu-1604-32.sh -o ubuntu-xenial
      - store_artifacts:
          path: output
          destination: /
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"\`sudo dpkg -i *.deb && sudo apt-get install -f\`"$'\n'"or double click in Nautilus(Files) to install" -delete x86.ubuntu.xenial.16.04 output/
  build-appimage:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Download clang 9.0.0 and install libstdc++
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz --output llvm.tar.xz && tar --no-same-owner -xf llvm.tar.xz && apt update && DEBIAN_FRONTEND=noninteractive apt -y install libstdc++-5-dev:i386
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04/bin:$PATH CC=clang CXX=clang++ ./build_appimage.sh -j4 -q quirks-ubuntu-1604.sh -i $CIRCLE_BUILD_NUM
      - store_artifacts:
          path: output
          destination: /
      - persist_to_workspace:
          root: output
          paths:
            - ./*.AppImage
  build-appimage32:
    docker:
      - image: minecraftlinux/ci-xenial:0.0.1
    steps:
      - checkout
      - run:
          name: Download clang 9.0.0 and install libstdc++
          command: curl -L http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz --output llvm.tar.xz && tar --no-same-owner -xf llvm.tar.xz && apt update && DEBIAN_FRONTEND=noninteractive apt -y remove qt59base qt59declarative qt59quickcontrols qt59quickcontrols2 qt59svg qt59webengine libcurl4-openssl-dev  libzip-dev libuv1-dev && DEBIAN_FRONTEND=noninteractive apt -y install libstdc++-5-dev:i386 libcurl4-openssl-dev:i386 libssl-dev:i386 libgl1-mesa-dev:i386 libuv1-dev:i386 libzip-dev:i386 libprotobuf-dev:i386 qt59base:i386 qt59declarative:i386 qt59quickcontrols:i386 qt59quickcontrols2:i386 qt59svg:i386 qt59webengine:i386
      - run:
          name: Run the buildscript
          command: . /opt/qt59/bin/qt59-env.sh && PATH=$PWD/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-16.04/bin:$PATH CC=clang CXX=clang++ ./build_appimage_32.sh -j4 -q quirks-ubuntu-1604-32.sh -i $CIRCLE_BUILD_NUM
      - store_artifacts:
          path: output
          destination: /
      - persist_to_workspace:
          root: output
          paths:
            - ./*.AppImage
  build-buster-appimage-armhf:
    docker:
      - image: buildpack-deps:buster
    steps:
      - checkout
      - run:
          name: Download armhf Dependences
          command: dpkg --add-architecture armhf && apt update && DEBIAN_FRONTEND=noninteractive apt install -y python3-pip cmake g++-arm-linux-gnueabihf patchelf libpng-dev:armhf libx11-dev:armhf libxi-dev:armhf libcurl4-openssl-dev:armhf libudev-dev:armhf libevdev-dev:armhf libegl1-mesa-dev:armhf libasound2:armhf	qt5-default:armhf git cmake pkg-config qtbase5-dev:armhf qtwebengine5-dev:armhf libssl-dev:armhf libcurl4-openssl-dev:armhf libpng-dev:armhf libx11-dev:armhf libxi-dev:armhf libssl-dev:armhf libudev-dev:armhf libevdev-dev:armhf libegl1-mesa-dev:armhf libgl1-mesa-dev:armhf libssl-dev:armhf libuv1-dev:armhf libzip-dev:armhf libprotobuf-dev:armhf protobuf-compiler qtdeclarative5-dev:armhf libqt5svg5-dev:armhf qml-module-qtquick2:armhf qml-module-qtquick-layouts:armhf qml-module-qtquick-controls:armhf qml-module-qtquick-controls2:armhf qml-module-qtquick-window2:armhf qml-module-qtquick-dialogs:armhf qml-module-qt-labs-settings:armhf qml-module-qt-labs-folderlistmodel:armhf jq curl binutils desktop-file-utils squashfs-tools && pip3 install jinja2 ds_store ply
      - run:
          name: Run the buildscript
          command: ./build_appimage_armhf.sh -j4 -q quirks-ubuntu-buster.sh -i $CIRCLE_BUILD_NUM
      - store_artifacts:
          path: output
          destination: /
      - persist_to_workspace:
          root: output
          paths:
            - ./*.AppImage
  deploy-appimage:
    docker:
    - image: debian:buster
    steps:
      - run:
          name: Install ca-certifactes curl
          command: apt update && DEBIAN_FRONTEND=noninteractive apt install -y ca-certificates curl
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Upload files to Github
          command: curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz --output ghr.tar.gz && tar -xf ghr.tar.gz && ./ghr*/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "**Not found? Look at the second Page!**"$'\n'"[First read my README](https://github.com/ChristopherHX/mcpelauncher-manifest) for current Features, known Issues and Bugs."$'\n'"Install \`chmod +x path/to/Minecraft.Appimage\` or in Files properties run as executable" -delete appimage /tmp/workspace
workflows:
  version: 2
  build:
    jobs:
      - build-arch
      - build-manjaro
      - build-19.10
      - build-20.04
      - build
      # - build32
      - build-disco
      - build-buster
      # - build-stretch
      # - build-buster-origin
      # - build-buster-appimage-origin
      - build-xenial
      - build-xenial32

      - build-appimage
      - build-appimage32
      - build-buster-appimage-armhf
      - deploy-appimage:
          requires:
          - build-appimage
          - build-appimage32
          - build-buster-appimage-armhf
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-arch
      - build-manjaro
